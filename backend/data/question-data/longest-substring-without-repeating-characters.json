{
  "id": "3",
  "title": "Longest Substring Without Repeating Characters",
  "methodName": "lengthOfLongestSubstring",
  "signature": {
    "params": [{"name": "s", "type": "string"}],
    "return_type": "int"
  },
  "difficulty": "Hard",
  "description_html": "<p>Given a string <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">s</code>, find the length of the <strong>longest substring</strong> without repeating characters.</p><div class=\"space-y-4\"><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 1:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> s = \"abcabcbb\"</div><div><strong>Output:</strong> 3</div><div><strong>Explanation:</strong> The answer is \"abc\", with the length of 3.</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 2:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> s = \"bbbbb\"</div><div><strong>Output:</strong> 1</div><div><strong>Explanation:</strong> The answer is \"b\", with the length of 1.</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 3:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> s = \"pwwkew\"</div><div><strong>Output:</strong> 3</div><div><strong>Explanation:</strong> The answer is \"wke\", with the length of 3.</div><div class=\"text-gray-600 mt-1\">Notice that the answer must be a substring, \"pwke\" is a subsequence and not a substring.</div></div></div></div><div class=\"bg-blue-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2 text-blue-800\">Constraints:</h4><ul class=\"list-disc list-inside space-y-1 text-sm\"><li><code class=\"bg-white px-1 py-0.5 rounded\">0 <= s.length <= 5 * 10<sup>4</sup></code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">s</code> consists of English letters, digits, symbols and spaces.</li></ul></div>",
  "starter_code": {
    "python": "class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        ",
    "javascript": "class Solution {\n    lengthOfLongestSubstring(s) {\n        \n    }\n}",
    "java": "class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        \n    }\n};"
  }
}