{
  "id": "21",
  "title": "Invert Binary Tree",
  "methodName": "invertTree",
  "difficulty": "Easy",
  "description_html": "<p>Given the <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">root</code> of a binary tree, invert the tree, and return <em>its root</em>.</p><div class=\"space-y-4\"><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 1:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> root = [4,2,7,1,3,6,9]</div><div><strong>Output:</strong> [4,7,2,9,6,3,1]</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 2:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> root = [2,1,3]</div><div><strong>Output:</strong> [2,3,1]</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 3:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> root = []</div><div><strong>Output:</strong> []</div></div></div></div><div class=\"bg-blue-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2 text-blue-800\">Constraints:</h4><ul class=\"list-disc list-inside space-y-1 text-sm\"><li>The number of nodes in the tree is in the range <code class=\"bg-white px-1 py-0.5 rounded\">[0, 100]</code>.</li><li><code class=\"bg-white px-1 py-0.5 rounded\">-100 <= Node.val <= 100</code></li></ul></div>",
  "starter_code": {
    "python": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def invertTree(self, root: TreeNode) -> TreeNode:\n        ",
    "javascript": "// Definition for a binary tree node.\n// function TreeNode(val, left, right) {\n//     this.val = (val===undefined ? 0 : val)\n//     this.left = (left===undefined ? null : left)\n//     this.right = (right===undefined ? null : right)\n// }\nclass Solution {\n    invertTree(root) {\n        \n    }\n}",
    "java": "// Definition for a binary tree node.\n// public class TreeNode {\n//     int val;\n//     TreeNode left;\n//     TreeNode right;\n//     TreeNode() {}\n//     TreeNode(int val) { this.val = val; }\n//     TreeNode(int val, TreeNode left, TreeNode right) {\n//         this.val = val;\n//         this.left = left;\n//         this.right = right;\n//     }\n// }\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n        \n    }\n}",
    "cpp": "// Definition for a binary tree node.\n// struct TreeNode {\n//     int val;\n//     TreeNode *left;\n//     TreeNode *right;\n//     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n//     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n//     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n// };\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        \n    }\n};"
  }
}