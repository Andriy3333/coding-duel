{
  "id": "4",
  "title": "FizzBuzz",
  "methodName": "fizzBuzz",
  "signature": {
    "params": [{"name": "n", "type": "int"}],
    "return_type": "string[]"
  },
  "difficulty": "Easy",
  "problemDescription": "Given an integer n, return a string array answer (1-indexed) where: answer[i] == 'FizzBuzz' if i is divisible by 3 and 5, answer[i] == 'Fizz' if i is divisible by 3, answer[i] == 'Buzz' if i is divisible by 5, answer[i] == i (as a string) if none of the above conditions are true.",
  "examples": [
    { "input": "n = 3", "output": "[\"1\",\"2\",\"Fizz\"]" },
    { "input": "n = 5", "output": "[\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\"]" },
    { "input": "n = 15", "output": "[\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\",\"Fizz\",\"7\",\"8\",\"Fizz\",\"Buzz\",\"11\",\"Fizz\",\"13\",\"14\",\"FizzBuzz\"]" }
  ],
  "constraints": [
    "1 <= n"
  ],
  "starter_code": {
    "python": "class Solution:\n    def fizzBuzz(self, n: int) -> list[str]:\n        ",
    "javascript": "class Solution {\n    fizzBuzz(n) {\n        \n    }\n}",
    "java": "class Solution {\n    public List<String> fizzBuzz(int n) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    vector<string> fizzBuzz(int n) {\n        \n    }\n};"
  }
}