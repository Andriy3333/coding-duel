{
  "id": "22",
  "title": "Merge Two Sorted Lists",
  "methodName": "mergeTwoLists",
  "signature": {
    "params": [{"name": "list1", "type": "ListNode"}, {"name": "list2", "type": "ListNode"}],
    "return_type": "ListNode"
  },
  "difficulty": "Easy",
  "description_html": "<p>You are given the heads of two sorted linked lists <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">list1</code> and <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">list2</code>.</p><p>Merge the two lists into one <strong>sorted</strong> list. The list should be made by splicing together the nodes of the first two lists.</p><p>Return <em>the head of the merged linked list</em>.</p><div class=\"space-y-4\"><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 1:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> list1 = [1,2,4], list2 = [1,3,4]</div><div><strong>Output:</strong> [1,1,2,3,4,4]</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 2:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> list1 = [], list2 = []</div><div><strong>Output:</strong> []</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 3:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> list1 = [], list2 = [0]</div><div><strong>Output:</strong> [0]</div></div></div></div><div class=\"bg-blue-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2 text-blue-800\">Constraints:</h4><ul class=\"list-disc list-inside space-y-1 text-sm\"><li>The number of nodes in both lists is in the range <code class=\"bg-white px-1 py-0.5 rounded\">[0, 50]</code>.</li><li><code class=\"bg-white px-1 py-0.5 rounded\">-100 <= Node.val <= 100</code></li><li>Both <code class=\"bg-white px-1 py-0.5 rounded\">list1</code> and <code class=\"bg-white px-1 py-0.5 rounded\">list2</code> are sorted in <strong>non-decreasing</strong> order.</li></ul></div>",
  "starter_code": {
    "python": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, list1: ListNode, list2: ListNode) -> ListNode:\n        ",
    "javascript": "// Definition for singly-linked list.\n// function ListNode(val, next) {\n//     this.val = (val===undefined ? 0 : val)\n//     this.next = (next===undefined ? null : next)\n// }\nclass Solution {\n    mergeTwoLists(list1, list2) {\n        \n    }\n}",
    "java": "// Definition for singly-linked list.\n// public class ListNode {\n//     int val;\n//     ListNode next;\n//     ListNode() {}\n//     ListNode(int val) { this.val = val; }\n//     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n// }\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        \n    }\n}",
    "cpp": "// Definition for singly-linked list.\n// struct ListNode {\n//     int val;\n//     ListNode *next;\n//     ListNode() : val(0), next(nullptr) {}\n//     ListNode(int x) : val(x), next(nullptr) {}\n//     ListNode(int x, ListNode *next) : val(x), next(next) {}\n// };\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        \n    }\n};"
  }
}