{
  "id": "22",
  "title": "Merge Two Sorted Lists",
  "methodName": "mergeTwoLists",
  "signature": {
    "params": [
      {
        "name": "list1",
        "type": "ListNode"
      },
      {
        "name": "list2",
        "type": "ListNode"
      }
    ],
    "return_type": "ListNode"
  },
  "difficulty": "Easy",
  "problemDescription": "You are given the heads of two sorted linked lists list1 and list2. Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists. Return the head of the merged linked list.",
  "examples": [
    {
      "input": "list1 = [1,2,4], list2 = [1,3,4]",
      "output": "[1,1,2,3,4,4]"
    },
    {
      "input": "list1 = [], list2 = []",
      "output": "[]"
    },
    {
      "input": "list1 = [], list2 = [0]",
      "output": "[0]"
    }
  ],
  "constraints": [
    "Both list1 and list2 are sorted in non-decreasing order"
  ],
  "starter_code": {
    "python": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, list1: ListNode, list2: ListNode) -> ListNode:\n        ",
    "javascript": "// Definition for singly-linked list.\n// function ListNode(val, next) {\n//     this.val = (val===undefined ? 0 : val)\n//     this.next = (next===undefined ? null : next)\n// }\nclass Solution {\n    mergeTwoLists(list1, list2) {\n        // @return {ListNode}\n        \n    }\n}",
    "java": "// Definition for singly-linked list.\n// public class ListNode {\n//     int val;\n//     ListNode next;\n//     ListNode() {}\n//     ListNode(int val) { this.val = val; }\n//     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n// }\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        \n    }\n}",
    "cpp": "// Definition for singly-linked list.\n// struct ListNode {\n//     int val;\n//     ListNode *next;\n//     ListNode() : val(0), next(nullptr) {}\n//     ListNode(int x) : val(x), next(nullptr) {}\n//     ListNode(int x, ListNode *next) : val(x), next(next) {}\n// };\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        \n    }\n};"
  }
}