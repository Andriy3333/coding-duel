{
  "id": "42",
  "title": "Trapping Rain Water",
  "methodName": "trap",
  "difficulty": "Hard",
  "description_html": "<p>Given <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">n</code> non-negative integers representing an elevation map where the width of each bar is <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">1</code>, compute how much water it can trap after raining.</p><div class=\"space-y-4\"><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 1:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> height = [0,1,0,2,1,0,1,3,2,1,2,1]</div><div><strong>Output:</strong> 6</div><div><strong>Explanation:</strong> The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 2:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> height = [4,2,0,3,2,5]</div><div><strong>Output:</strong> 9</div></div></div></div><div class=\"bg-blue-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2 text-blue-800\">Constraints:</h4><ul class=\"list-disc list-inside space-y-1 text-sm\"><li><code class=\"bg-white px-1 py-0.5 rounded\">n == height.length</code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">1 <= n <= 2 * 10<sup>4</sup></code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">0 <= height[i] <= 3 * 10<sup>4</sup></code></li></ul></div>",
  "starter_code": {
    "python": "class Solution:\n    def trap(self, height: list[int]) -> int:\n        ",
    "javascript": "class Solution {\n    trap(height) {\n        \n    }\n}",
    "java": "class Solution {\n    public int trap(int[] height) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    int trap(vector<int>& height) {\n        \n    }\n};"
  }
}