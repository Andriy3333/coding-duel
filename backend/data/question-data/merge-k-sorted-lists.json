{
  "id": "41",
  "title": "Merge k Sorted Lists",
  "methodName": "mergeKLists",
  "signature": {
    "params": [
      {
        "name": "lists",
        "type": "ListNode[]"
      }
    ],
    "return_type": "ListNode"
  },
  "difficulty": "Hard",
  "problemDescription": "You are given an array of k linked-lists lists, each linked-list is sorted in ascending order. Merge all the linked-lists into one sorted linked-list and return it.",
  "examples": [
    {
      "input": "lists = [[1,4,5],[1,3,4],[2,6]]",
      "output": "[1,1,2,3,4,4,5,6]"
    },
    {
      "input": "lists = []",
      "output": "[]"
    },
    {
      "input": "lists = [[]]",
      "output": "[]"
    }
  ],
  "constraints": [
    "lists[i] is sorted in ascending order"
  ],
  "starter_code": {
    "python": "class Solution:\n    def mergeKLists(self, lists: list[ListNode]) -> ListNode:\n        ",
    "javascript": "class Solution {\n    mergeKLists(lists) {\n        // @return {ListNode}\n        \n    }\n}",
    "java": "class Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        \n    }\n};"
  }
}