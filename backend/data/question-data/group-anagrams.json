{
  "id": "29",
  "title": "Group Anagrams",
  "methodName": "groupAnagrams",
  "difficulty": "Medium",
  "description_html": "<p>Given an array of strings <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">strs</code>, group <strong>the anagrams</strong> together. You can return the answer in <strong>any order</strong>.</p><p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p><div class=\"space-y-4\"><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 1:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]</div><div><strong>Output:</strong> [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 2:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> strs = [\"\"]</div><div><strong>Output:</strong> [[\"\"]]</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 3:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> strs = [\"a\"]</div><div><strong>Output:</strong> [[\"a\"]]</div></div></div></div><div class=\"bg-blue-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2 text-blue-800\">Constraints:</h4><ul class=\"list-disc list-inside space-y-1 text-sm\"><li><code class=\"bg-white px-1 py-0.5 rounded\">1 <= strs.length <= 10<sup>4</sup></code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">0 <= strs[i].length <= 100</code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">strs[i]</code> consists of lowercase English letters only.</li></ul></div>",
  "starter_code": {
    "python": "class Solution:\n    def groupAnagrams(self, strs: list[str]) -> list[list[str]]:\n        ",
    "javascript": "class Solution {\n    groupAnagrams(strs) {\n        \n    }\n}",
    "java": "class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        \n    }\n};"
  }
}