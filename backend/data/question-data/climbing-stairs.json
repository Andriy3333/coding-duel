{
  "id": "18",
  "title": "Climbing Stairs",
  "methodName": "climbStairs",
  "signature": {
    "params": [
      {
        "name": "n",
        "type": "int"
      }
    ],
    "return_type": "int"
  },
  "difficulty": "Easy",
  "problemDescription": "You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?",
  "examples": [
    {
      "input": "n = 2",
      "output": "2"
    },
    {
      "input": "n = 3",
      "output": "3"
    }
  ],
  "constraints": [
    "1 <= n"
  ],
  "starter_code": {
    "python": "class Solution:\n    def climbStairs(self, n: int) -> int:\n        ",
    "javascript": "class Solution {\n    climbStairs(n) {\n        // @return {number}\n        \n    }\n}",
    "java": "class Solution {\n    public int climbStairs(int n) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    int climbStairs(int n) {\n        \n    }\n};"
  }
}