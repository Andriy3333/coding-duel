{
  "id": "45",
  "title": "Serialize and Deserialize Binary Tree",
  "methodName": "serialize",
  "signature": {
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return_type": "string"
  },
  "difficulty": "Hard",
  "problemDescription": "Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.",
  "examples": [
    {
      "input": "root = [1,2,3,null,null,4,5]",
      "output": "[1,2,3,null,null,4,5]"
    },
    {
      "input": "root = []",
      "output": "[]"
    }
  ],
  "constraints": [],
  "starter_code": {
    "python": "class Solution:\n    def serialize(self, root):\n        \n    \n    def deserialize(self, data):\n        ",
    "javascript": "class Solution {\n    serialize(root) {\n        // @return {string}\n        \n    }\n    \n    deserialize(data) {\n        // @return {string}\n        \n    }\n}",
    "java": "class Solution {\n    public String serialize(TreeNode root) {\n        \n    }\n    \n    public TreeNode deserialize(String data) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    string serialize(TreeNode* root) {\n        \n    }\n    \n    TreeNode* deserialize(string data) {\n        \n    }\n};"
  }
}