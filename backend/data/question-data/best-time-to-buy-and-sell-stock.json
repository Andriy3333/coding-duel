{
  "id": "30",
  "title": "Best Time to Buy and Sell Stock",
  "methodName": "maxProfit",
  "signature": {
    "params": [{"name": "prices", "type": "int[]"}],
    "return_type": "int"
  },
  "difficulty": "Medium",
  "problemDescription": "You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",
  "examples": [
    { "input": "prices = [7,1,5,3,6,4]", "output": "5" },
    { "input": "prices = [7,6,4,3,1]", "output": "0" }
  ],
  "constraints": [
    "0 <= prices[i]"
  ],
  "starter_code": {
    "python": "class Solution:\n    def maxProfit(self, prices: list[int]) -> int:\n        ",
    "javascript": "class Solution {\n    maxProfit(prices) {\n        \n    }\n}",
    "java": "class Solution {\n    public int maxProfit(int[] prices) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        \n    }\n};"
  }
}