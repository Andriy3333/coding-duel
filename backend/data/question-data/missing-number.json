{
  "id": "11",
  "title": "Missing Number",
  "methodName": "missingNumber",
  "signature": {
    "params": [{ "name": "nums", "type": "int[]" }],
    "return_type": "int"
  },
  "difficulty": "Easy",
  "description_html": "<div style=\"font-family: 'JetBrains Mono', 'Consolas', 'Monaco', 'Courier New', monospace; background: #1e1e1e; color: #d4d4d4; padding: 20px; border-radius: 8px;\"><div style=\"color: var(--secondary); font-family: 'Consolas', 'Monaco', monospace; margin-bottom: 16px; font-size: 1.1rem;\">// Problem Description</div><div style=\"margin-bottom: 12px;\"><p style=\"line-height: 1.6; font-size: 1.1rem; font-weight: 500;\">Given an array <code style=\"color: var(--accent);\">nums</code> containing <code style=\"color: var(--accent);\">n</code> distinct numbers in the range <code style=\"color: var(--accent);\">[0, n]</code>, return the only number in the range that is missing from the array.</p></div><div style=\"margin-top: 24px;\"><div style=\"color: var(--secondary); font-family: 'Consolas', 'Monaco', monospace; margin-bottom: 16px; font-size: 1.1rem;\">// Sample Runs</div><div style=\"background: #0d0d0d; padding: 12px; border-radius: 4px; margin-bottom: 12px; font-family: 'Consolas', 'Monaco', monospace;\"><div style=\"margin-bottom: 12px;\"><span style=\"color: var(--accent);\">[3,0,1] &rarr; 2</span></div><div style=\"margin-bottom: 12px;\"><span style=\"color: var(--accent);\">[0,1] &rarr; 2</span></div><div><span style=\"color: var(--accent);\">[9,6,4,2,3,5,7,0,1] &rarr; 8</span></div></div></div><div style=\"margin-top: 32px;\"><div style=\"color: var(--secondary); font-family: 'Consolas', 'Monaco', monospace; margin-bottom: 16px; font-size: 1.1rem;\">// Constraints</div><div style=\"background: #0d0d0d; padding: 12px; border-radius: 4px; font-family: 'Consolas', 'Monaco', monospace; line-height: 1.8; color: var(--accent);\"><div style=\"margin-bottom: 8px;\">1 <= nums.length <= 10⁴</div><div style=\"margin-bottom: 8px;\">0 <= nums[i] <= nums.length</div><div>All the numbers of nums are unique</div></div></div></div>",
  "starter_code": {
    "python": "class Solution:\n    def missingNumber(self, nums: list[int]) -> int:\n        ",
    "javascript": "class Solution {\n    missingNumber(nums) {\n        \n    }\n}",
    "java": "class Solution {\n    public int missingNumber(int[] nums) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    int missingNumber(vector<int>& nums) {\n        \n    }\n};"
  }
}
