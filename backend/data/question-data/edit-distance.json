{
  "id": "43",
  "title": "Edit Distance",
  "methodName": "minDistance",
  "signature": {
    "params": [
      {
        "name": "word1",
        "type": "string"
      },
      {
        "name": "word2",
        "type": "string"
      }
    ],
    "return_type": "int"
  },
  "difficulty": "Hard",
  "problemDescription": "Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2. You have the following three operations permitted on a word: Insert a character, Delete a character, Replace a character.",
  "examples": [
    {
      "input": "word1 = \"horse\", word2 = \"ros\"",
      "output": "3"
    },
    {
      "input": "word1 = \"intention\", word2 = \"execution\"",
      "output": "5"
    }
  ],
  "constraints": [
    "0 <= word1.length, word2.length <= 500",
    "word1 and word2 consist of lowercase English letters."
  ],
  "starter_code": {
    "python": "class Solution:\n    def minDistance(self, word1: str, word2: str) -> int:\n        ",
    "javascript": "class Solution {\n    minDistance(word1, word2) {\n        // @return {number}\n        \n    }\n}",
    "java": "class Solution {\n    public int minDistance(String word1, String word2) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        \n    }\n};"
  }
}
