{
  "id": "48",
  "title": "Longest Increasing Path in a Matrix",
  "methodName": "longestIncreasingPath",
  "signature": {
    "params": [{"name": "matrix", "type": "int[][]"}],
    "return_type": "int"
  },
  "difficulty": "Hard",
  "description_html": "<p>Given an <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">m x n</code> integers <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">matrix</code>, return <em>the length of the longest increasing path in <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">matrix</code></em>.</p><p>From each cell, you can either move in four directions: left, right, up, or down. You <strong>may not</strong> move <strong>diagonally</strong> or move <strong>outside the boundary</strong> (i.e., wrap-around is not allowed).</p><div class=\"space-y-4\"><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 1:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> matrix = [[9,9,4],[6,6,8],[2,1,1]]</div><div><strong>Output:</strong> 4</div><div><strong>Explanation:</strong> The longest increasing path is [1, 2, 6, 9].</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 2:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> matrix = [[3,4,5],[3,2,6],[2,2,1]]</div><div><strong>Output:</strong> 4</div><div><strong>Explanation:</strong> The longest increasing path is [3, 4, 5, 6]. Moving diagonally is not allowed.</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 3:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> matrix = [[1]]</div><div><strong>Output:</strong> 1</div></div></div></div><div class=\"bg-blue-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2 text-blue-800\">Constraints:</h4><ul class=\"list-disc list-inside space-y-1 text-sm\"><li><code class=\"bg-white px-1 py-0.5 rounded\">m == matrix.length</code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">n == matrix[i].length</code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">1 <= m, n <= 200</code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">0 <= matrix[i][j] <= 2<sup>31</sup> - 1</code></li></ul></div>",
  "starter_code": {
    "python": "class Solution:\n    def longestIncreasingPath(self, matrix: list[list[int]]) -> int:\n        ",
    "javascript": "class Solution {\n    longestIncreasingPath(matrix) {\n        \n    }\n}",
    "java": "class Solution {\n    public int longestIncreasingPath(int[][] matrix) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n        \n    }\n};"
  }
}