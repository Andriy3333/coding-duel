{
  "id": "27",
  "title": "Container With Most Water",
  "methodName": "maxArea",
  "signature": {
    "params": [{"name": "height", "type": "int[]"}],
    "return_type": "int"
  },
  "difficulty": "Medium",
  "problemDescription": "You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]). Find two lines that together with the x-axis form a container, such that the container contains the most water. Return the maximum amount of water a container can store. Notice that you may not slant the container.",
  "examples": [
    {"input": "height = [1,8,6,2,5,4,8,3,7]", "output": "49"},
    {"input": "height = [1,1]", "output": "1"}
  ],
  "constraints": [
    "2 <= height.length",
    "0 <= height[i]"
  ],
  "starter_code": {
    "python": "class Solution:\n    def maxArea(self, height: list[int]) -> int:\n        ",
    "javascript": "class Solution {\n    maxArea(height) {\n        \n    }\n}",
    "java": "class Solution {\n    public int maxArea(int[] height) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    int maxArea(vector<int>& height) {\n        \n    }\n};"
  }
}