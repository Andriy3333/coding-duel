{
  "id": "12",
  "title": "Happy Number",
  "methodName": "isHappy",
  "signature": {
    "params": [
      {
        "name": "n",
        "type": "int"
      }
    ],
    "return_type": "boolean"
  },
  "difficulty": "Easy",
  "problemDescription": "Write an algorithm to determine if a number n is happy. A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits. Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy. Return true if n is a happy number, and false if not.",
  "examples": [
    {
      "input": "n = 19",
      "output": "true"
    },
    {
      "input": "n = 2",
      "output": "false"
    }
  ],
  "constraints": [
    "1 <= n"
  ],
  "starter_code": {
    "python": "class Solution:\n    def isHappy(self, n: int) -> bool:\n        ",
    "javascript": "class Solution {\n    isHappy(n) {\n        // @return {boolean}\n        \n    }\n}",
    "java": "class Solution {\n    public boolean isHappy(int n) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    bool isHappy(int n) {\n        \n    }\n};"
  }
}