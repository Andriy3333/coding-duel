{
  "id": "9",
  "title": "Move Zeroes",
  "methodName": "moveZeroes",
  "signature": {
    "params": [{"name": "nums", "type": "int[]"}],
    "return_type": "int[]"
  },
  "difficulty": "Easy",
  "description_html": "<p>Given an integer array <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">nums</code>, move all <code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">0</code>'s to the end of it while maintaining the relative order of the non-zero elements.</p><p><strong>Note</strong> that you must do this in-place without making a copy of the array.</p><div class=\"space-y-4\"><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 1:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> nums = [0,1,0,3,12]</div><div><strong>Output:</strong> [1,3,12,0,0]</div></div></div><div class=\"bg-gray-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2\">Example 2:</h4><div class=\"font-mono text-sm\"><div><strong>Input:</strong> nums = [0]</div><div><strong>Output:</strong> [0]</div></div></div></div><div class=\"bg-blue-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2 text-blue-800\">Constraints:</h4><ul class=\"list-disc list-inside space-y-1 text-sm\"><li><code class=\"bg-white px-1 py-0.5 rounded\">1 <= nums.length <= 10<sup>4</sup></code></li><li><code class=\"bg-white px-1 py-0.5 rounded\">-2<sup>31</sup> <= nums[i] <= 2<sup>31</sup> - 1</code></li></ul></div><div class=\"bg-yellow-50 p-4 rounded-lg\"><h4 class=\"font-semibold mb-2 text-yellow-800\">Follow up:</h4><p class=\"text-sm\">Could you minimize the total number of operations done?</p></div>",
  "starter_code": {
    "python": "class Solution:\n    def moveZeroes(self, nums: list[int]) -> None:\n        ",
    "javascript": "class Solution {\n    moveZeroes(nums) {\n        \n    }\n}",
    "java": "class Solution {\n    public void moveZeroes(int[] nums) {\n        \n    }\n}",
    "cpp": "class Solution {\npublic:\n    void moveZeroes(vector<int>& nums) {\n        \n    }\n};"
  }
}